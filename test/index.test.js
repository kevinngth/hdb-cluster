const { starterFunction, isAlreadyVisited } = require("../src/index");

test("should find 1 cluster", () => {
    const input1 = "0+0\n+0+\n0++";
    expect(starterFunction(input1)).toBe(1);
});

test("should return false", () => {
    const clusters = [
        [
            { i: 2, j: 2 },
            { i: 2, j: 3 },
        ],
        [
            { i: 0, j: 2 },
            { i: 0, j: 3 },
        ],
    ];
    expect(isAlreadyVisited({ i: 2, j: 3 }, clusters)).toBe(true);
});

test("should return true", () => {
    const clusters = [[{ i: 1, j: 1 }]];
    expect(isAlreadyVisited({ i: 2, j: 3 }, clusters)).toBe(false);
});

test("should find 3 clusters", () => {
    const input1 = "000++0\n+++00+\n000000\n+0000+\n++00+0";
    expect(starterFunction(input1)).toBe(3);
});

test("should find 2 clusters", () => {
    const input1 =
        "0000000000++++00+00++00++0+0+000+0+\n00++0000+++000000+00++0+0+0++++0+++\n00++++0+0+000+0+++0+++000++00+0+++0\n000+0000+0++0+++++++000++0+0+++++00\n0++++0+++00+00+0000+0++0000000++000\n0+0+++0++++000++++++++0000++00+0++0\n++0+00000+++0++0++000++++++000++0++\n0++0000+00+++0+++000+++0+0+0000+++0\n0++++000++00++0+000+0000++00+000000\n+0++0+++0+++++0+++00+0+0+0++0++0+0+\n000000+0000++0000+++++++00++0+0+0++\n0+0+++++000++++0++++00+0++00++0++++\n++0++++0+0+000+000++00+0+000+0++0+0\n00+0+++++++0+0+000++000+++++00+0000\n+0+0+0+++0++000000+++++0+00+++0+++0\n+++0+0+++00++0++++++0+++00000000++0\n0+0++++0000+0+0++0+++00000000++0000\n00000+++0++0000+0000++0+0+0+++00++0\n0+0++0+0++++++00000++++0+000+0+00+0\n0+0000+0+0+++0++000++00+00+00+00+0+\n0+++++000+++0+++00++00++++++++++000\n000+0000++0+++000+0+00+0+000+++++00\n++0+0+0++0++++0+0+00+00+00++0+000+0\n0++000+0+00++00+++00++0+0000+++00++\n000+0++0+++0000+000+00++0+00+000+++\n+000++0+0+0+++00++++++0+0+0+++0++00\n0+0++00++0000+00++000000++0+00++000\n+0+++0+++0++00+000+++00++00+0+0+0++\n0000++++++++++0++00++0+0+000++0++++\n+000000+0+0++0++0000++00000000++0+0";
    expect(starterFunction(input1)).toBe(2);
});

// [
//     [ '01', '10', '21', '12', '22' ],
//     [ '03', '04', '15' ],
//     [ '11' ],
//     [ '30', '40', '41' ],
//     [ '35', '44' ]
//   ]

// 000++0
// +++00+
// 000000
// +0000+
// ++00+0
